<VirtualHost *:80>
  #TODO set these addresses
  #ServerName example.com
  #ServerAlias www.example.com

  #TODO Point this to your public folder of teambox
  #DocumentRoot /path/to/app/current/public

  RewriteEngine On

  <Proxy balancer://unicornservers>
    #TODO set proper unicorn address
    #BalancerMember http://127.0.0.1:5000
  </Proxy>

  # Redirect all non-static requests to unicorn
  RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_FILENAME} !-f
  RewriteRule ^/(.*)$ balancer://unicornservers%{REQUEST_URI} [P,QSA,L]

  ProxyPass / balancer://unicornservers/
  ProxyPassReverse / balancer://unicornservers/
  ProxyPreserveHost on

  <Proxy *>
    Order deny,allow
    Allow from all
  </Proxy>

  # Custom log file locations
  ErrorLog  /home/demo/public_html/railsapp/log/error.log
  CustomLog /home/demo/public_html/railsapp/log/access.log combined



  ### Snippets from HTML5 Boilerplate ###

  # Techniques in here adapted from all over, including:
  #   Kroc Camen: camendesign.com/.htaccess
  #   perishablepress.com/press/2006/01/10/stupid-htaccess-tricks/
  #   Sample .htaccess file of CMS MODx: modxcms.com


  # ----------------------------------------------------------------------
  # Better website experience for IE users
  # ----------------------------------------------------------------------

  # Force the latest IE version, in various cases when it may fall back to IE7 mode
  #  github.com/rails/rails/commit/123eb25#commitcomment-118920
  # Use ChromeFrame if it's installed for a better experience for the poor IE folk

  <IfModule mod_headers.c>
    Header set X-UA-Compatible "IE=Edge,chrome=1"
    # mod_headers can't match by content-type, but we don't want to send this header on *everything*...
    <FilesMatch "\.(appcache|crx|css|eot|gif|htc|ico|jpe?g|js|m4a|m4v|manifest|mp4|oex|oga|ogg|ogv|otf|pdf|png|safariextz|svg|svgz|ttf|vcf|webm|webp|woff|xml|xpi)$">
      Header unset X-UA-Compatible
    </FilesMatch>
  </IfModule>


  # ----------------------------------------------------------------------
  # Gzip compression
  # ----------------------------------------------------------------------

  <IfModule mod_deflate.c>

    # Force deflate for mangled headers developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/
    <IfModule mod_setenvif.c>
      <IfModule mod_headers.c>
        SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
        RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
      </IfModule>
    </IfModule>

    # Compress all output labeled with one of the following MIME-types
    # (for Apache versions below 2.3.7, you don't need to enable `mod_filter`
    # and can remove the `<IfModule mod_filter.c>` and `</IfModule>` lines as
    # `AddOutputFilterByType` is still in the core directives)
    <IfModule mod_filter.c>
      AddOutputFilterByType DEFLATE application/atom+xml \
                                    application/javascript \
                                    application/json \
                                    application/rss+xml \
                                    application/vnd.ms-fontobject \
                                    application/x-font-ttf \
                                    application/xhtml+xml \
                                    application/xml \
                                    font/opentype \
                                    image/svg+xml \
                                    image/x-icon \
                                    text/css \
                                    text/html \
                                    text/plain \
                                    text/x-component \
                                    text/xml
    </IfModule>

  </IfModule>


  # ----------------------------------------------------------------------
  # Expires headers (for better cache control)
  # ----------------------------------------------------------------------

  # These are pretty far-future expires headers.
  # They assume you control versioning with filename-based cache busting
  # Additionally, consider that outdated proxies may miscache
  #   www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/

  # If you don't use filenames to version, lower the CSS and JS to something like
  # "access plus 1 week".

  <IfModule mod_expires.c>
    ExpiresActive on

    # Perhaps better to whitelist expires rules? Perhaps.
    ExpiresDefault                          "access plus 1 month"

    # cache.appcache needs re-requests in FF 3.6 (thanks Remy ~Introducing HTML5)
    ExpiresByType text/cache-manifest       "access plus 0 seconds"

    # Your document html
    ExpiresByType text/html                 "access plus 0 seconds"

    # Data
    ExpiresByType application/json          "access plus 0 seconds"
    ExpiresByType application/xml           "access plus 0 seconds"
    ExpiresByType text/xml                  "access plus 0 seconds"

    # Feed
    ExpiresByType application/atom+xml      "access plus 1 hour"
    ExpiresByType application/rss+xml       "access plus 1 hour"

    # Favicon (cannot be renamed)
    ExpiresByType image/x-icon              "access plus 1 week"

    # Media: images, video, audio
    ExpiresByType audio/ogg                 "access plus 1 month"
    ExpiresByType image/gif                 "access plus 1 month"
    ExpiresByType image/jpeg                "access plus 1 month"
    ExpiresByType image/png                 "access plus 1 month"
    ExpiresByType video/mp4                 "access plus 1 month"
    ExpiresByType video/ogg                 "access plus 1 month"
    ExpiresByType video/webm                "access plus 1 month"

    # HTC files  (css3pie)
    ExpiresByType text/x-component          "access plus 1 month"

    # Webfonts
    ExpiresByType application/vnd.ms-fontobject "access plus 1 month"
    ExpiresByType application/x-font-ttf    "access plus 1 month"
    ExpiresByType application/x-font-woff   "access plus 1 month"
    ExpiresByType font/opentype             "access plus 1 month"
    ExpiresByType image/svg+xml             "access plus 1 month"

    # CSS and JavaScript
    ExpiresByType application/javascript    "access plus 1 year"
    ExpiresByType text/css                  "access plus 1 year"

  </IfModule>


  # ----------------------------------------------------------------------
  # Set Keep-Alive Header
  # ----------------------------------------------------------------------

  # Keep-Alive allows the server to send multiple requests through one
  # TCP-connection. Be aware of possible disadvantages of this setting. Turn on
  # if you serve a lot of static content.

  <IfModule mod_headers.c>
    Header set Connection Keep-Alive
  </IfModule>


  # ----------------------------------------------------------------------
  # Suppress or force the "www." at the beginning of URLs
  # ----------------------------------------------------------------------

  # The same content should never be available under two different URLs -
  # especially not with and without "www." at the beginning, since this can cause
  # SEO problems (duplicate content). That's why you should choose one of the
  # alternatives and redirect the other one.

  # By default option 1 (no "www.") is activated.
  # no-www.org/faq.php?q=class_b

  # If you'd prefer to use option 2, just comment out all option 1 lines
  # and uncomment option 2.

  # IMPORTANT: NEVER USE BOTH RULES AT THE SAME TIME!

  # ----------------------------------------------------------------------

  # Option 1:
  # Rewrite "www.example.com -> example.com".

  <IfModule mod_rewrite.c>
    RewriteCond %{HTTPS} !=on
    RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
    RewriteRule ^ http://%1%{REQUEST_URI} [R=301,L]
  </IfModule>

  # ----------------------------------------------------------------------

  # Option 2:
  # Rewrite "example.com -> www.example.com".
  # Be aware that the following rule might not be a good idea if you use "real"
  # subdomains for certain parts of your website.

  # <IfModule mod_rewrite.c>
  #   RewriteCond %{HTTPS} !=on
  #   RewriteCond %{HTTP_HOST} !^www\..+$ [NC]
  #   RewriteRule ^ http://www.%{HTTP_HOST}%{REQUEST_URI} [R=301,L]


  # ----------------------------------------------------------------------
  # Custom 404 page
  # ----------------------------------------------------------------------

  # You can add custom pages to handle 500 or 403 pretty easily, if you like.
  # If you are hosting your site in subdirectory, adjust this accordingly
  #    e.g. ErrorDocument 404 /subdir/404.html
  ErrorDocument 404 /404.html


  # ----------------------------------------------------------------------
  # UTF-8 encoding
  # ----------------------------------------------------------------------

  # Use UTF-8 encoding for anything served text/plain or text/html
  AddDefaultCharset utf-8

  # Force UTF-8 for a number of file formats
  AddCharset utf-8 .atom .css .js .json .rss .vtt .xml # </IfModule>


  # ----------------------------------------------------------------------
  # A little more security
  # ----------------------------------------------------------------------

  # To avoid displaying the exact version number of Apache being used, add the
  # following to httpd.conf (it will not work in .htaccess):
  # ServerTokens Prod

  # "-Indexes" will have Apache block users from browsing folders without a
  # default document Usually you should leave this activated, because you
  # shouldn't allow everybody to surf through every folder on your server (which
  # includes rather private places like CMS system folders).
  <IfModule mod_autoindex.c>
    Options -Indexes
  </IfModule>

  # Block access to "hidden" directories or files whose names begin with a
  # period. This includes directories used by version control systems such as
  # Subversion or Git.
  <IfModule mod_rewrite.c>
    RewriteCond %{SCRIPT_FILENAME} -d [OR]
    RewriteCond %{SCRIPT_FILENAME} -f
    RewriteRule "(^|/)\." - [F]
  </IfModule>
</VirtualHost>
